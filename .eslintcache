[{"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\index.js":"1","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\App.js":"2","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\body.js":"3","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\footer.js":"4","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\topbar.js":"5","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\logo.js":"6","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\controlPanel.js":"7","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\terminal.js":"8","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\popover.js":"9","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\dashboard.js":"10","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\main.js":"11","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\files.js":"12","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\stats.js":"13","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\recognizing.js":"14","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\Learning.js":"15"},{"size":232,"mtime":1607683259286,"results":"16","hashOfConfig":"17"},{"size":1454,"mtime":1607810358550,"results":"18","hashOfConfig":"17"},{"size":1261,"mtime":1607683259276,"results":"19","hashOfConfig":"17"},{"size":874,"mtime":1607683259281,"results":"20","hashOfConfig":"17"},{"size":851,"mtime":1607720599560,"results":"21","hashOfConfig":"17"},{"size":560,"mtime":1607683259282,"results":"22","hashOfConfig":"17"},{"size":1122,"mtime":1607810116716,"results":"23","hashOfConfig":"17"},{"size":293,"mtime":1607683259279,"results":"24","hashOfConfig":"17"},{"size":4786,"mtime":1607810158890,"results":"25","hashOfConfig":"17"},{"size":2542,"mtime":1607683259279,"results":"26","hashOfConfig":"17"},{"size":852,"mtime":1607683259277,"results":"27","hashOfConfig":"17"},{"size":343,"mtime":1607810439740,"results":"28","hashOfConfig":"17"},{"size":304,"mtime":1607683259278,"results":"29","hashOfConfig":"17"},{"size":358,"mtime":1607683259278,"results":"30","hashOfConfig":"17"},{"size":344,"mtime":1607683259275,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ft1jvn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\index.js",[],["67","68"],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\App.js",["69","70"],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\body.js",["71","72","73","74"],"import {Label, Pane, Textarea} from \"evergreen-ui\";\r\nimport { useState, useEffect} from \"react\";\r\nimport Dashboard from \"../dashboard\";\r\nimport Main from \"./main/main\"\r\nimport Learning from \"../Learning\"\r\n\r\nfunction AppBody(){\r\n\r\n    let initialDashboardState = [\r\n        {\r\n            name: \"MQTT\",\r\n            value: \"DISABLED\",\r\n            details: \"MQTT Broker is running properly\"\r\n        },\r\n        {\r\n            name: \"Data\",\r\n            value: \"DISABLED\",\r\n            details: \"MQTT Broker is running properly\"\r\n        },\r\n        {\r\n            name: \"ONLINE\",\r\n            value: \"DISABLED\",\r\n            details: \"MQTT Broker is running properly\"\r\n        },\r\n        {\r\n            name: \"Learning\",\r\n            value: \"DISABLED\",\r\n            details: \"MQTT Broker is running properly\"\r\n        }\r\n    ]\r\n\r\n    const [DashboardState, setDasboardState] = useState(initialDashboardState);\r\n\r\n    return(\r\n        <Pane\r\n        display={\"flex\"}\r\n        flexDirection={\"column\"}\r\n        margin={\"auto\"}\r\n        width={\"1200px\"}\r\n        justifyContent={\"space-between\"}\r\n        >\r\n\r\n            <Dashboard elements={DashboardState}/>\r\n            <Main/>\r\n            <Learning />\r\n\r\n        </Pane>\r\n    )\r\n}\r\n\r\nexport default AppBody;","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\footer.js",[],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\topbar.js",["75","76"],"import {Button, Pane, Popover} from \"evergreen-ui\";\r\nimport Logo from \"./logo\"\r\nimport ControlPanel from \"./controlPanel\";\r\n\r\nfunction Topbar(props) {\r\n    return(\r\n        <Pane\r\n            width=\"100%\"\r\n            height={50}\r\n            border=\"default\"\r\n            paddingX=\"50px\"\r\n        >\r\n            <Pane\r\n                margin=\"auto\"\r\n                maxWidth=\"1200px\"\r\n\r\n                height=\"100%\"\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Logo />\r\n\r\n                <ControlPanel connectionStateNumber={props.serverState.num}\r\n                              connectToBroker={props.cn} setSettings={props.setSettings} settings={props.serverState}/>\r\n            </Pane>\r\n\r\n        </Pane>\r\n    )\r\n}\r\n\r\nexport default Topbar;","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\logo.js",[],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\controlPanel.js",["77","78"],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\terminal.js",["79"],"import {Text, Pane, Label} from \"evergreen-ui\";\r\n\r\nfunction Terminal(){\r\n    return(\r\n        <Pane\r\n            minWidth={\"400px\"}\r\n            height={\"100%\"}\r\n            border={\"default\"}\r\n        >\r\n            <Text>Terminal</Text>\r\n        </Pane>\r\n    )\r\n}\r\n\r\nexport default Terminal;","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\topbar\\popover.js",["80","81","82","83","84","85","86","87"],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\dashboard.js",["88","89"],"import {Pane, Text, Popover, Label} from \"evergreen-ui\";\r\nimport {TickCircleIcon, DeleteIcon} from \"evergreen-ui\"\r\n\r\n\r\nfunction Item(props){\r\n\r\n\r\n        return(\r\n            <Popover\r\n                bringFocusInside\r\n                trigger={\"hover\"}\r\n                content={\r\n                    <Pane\r\n                        height={40}\r\n                        paddingX={10}\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        flexDirection=\"column\"\r\n                    >\r\n                        <Text>some text</Text>\r\n                    </Pane>\r\n                }\r\n            >\r\n                <Pane\r\n                    display={\"flex\"}\r\n                    alignItems={\"center\"}\r\n                    justifyContent={\"space-between\"}\r\n                >\r\n                    {(props.value === \"OK\")?\r\n                        <TickCircleIcon color={\"success\"} size={\"20px\"}/>:\r\n                        <DeleteIcon color={\"danger\"} size={\"20px\"}/>\r\n                    }\r\n\r\n                    <Text\r\n                        fontWeight={\"900\"}\r\n                        textTransform={\"uppercase\"}\r\n                        marginLeft={\"10px\"}\r\n                    >\r\n                        {props.text}\r\n                    </Text>\r\n\r\n                </Pane>\r\n            </Popover>\r\n\r\n        )\r\n    }\r\n\r\n\r\nfunction Dashboard(props){\r\n\r\n    let elements = [\r\n        {\r\n            name: \"MQTT\",\r\n            value: \"OK\",\r\n            details: \"MQTT Broker is running properly\"\r\n        },\r\n        {\r\n            name: \"Data\",\r\n            value: \"OK\",\r\n            details: \"MQTT Broker is running properly\"\r\n        },\r\n        {\r\n            name: \"ONLINE\",\r\n            value: \"OK\",\r\n            details: \"MQTT Broker is running properly\"\r\n        },\r\n        {\r\n            name: \"Learning\",\r\n            value: \"DISABLED\",\r\n            details: \"MQTT Broker is running properly\"\r\n        }\r\n    ]\r\n\r\n\r\n    const MYItems = props.elements.map((elmnt) => {\r\n            return <Item text={elmnt.name} value={elmnt.value} details={elmnt.details}/>\r\n        }\r\n    );\r\n\r\n    return(\r\n        <Pane\r\n            width={\"100%\"}\r\n            height={\"60px\"}\r\n            border={\"default\"}\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n            paddingX={\"50px\"}\r\n            marginY={\"40px\"}\r\n        >\r\n\r\n            {MYItems}\r\n        </Pane>\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\main.js",[],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\files.js",[],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\stats.js",[],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\appbody\\main\\recognizing.js",[],"C:\\Users\\Mike Bool\\Desktop\\Limbo_React\\src\\Components\\Learning.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":19,"nodeType":"96","messageId":"97","endLine":1,"endColumn":28},{"ruleId":"94","severity":1,"message":"98","line":7,"column":9,"nodeType":"96","messageId":"97","endLine":7,"endColumn":19},{"ruleId":"94","severity":1,"message":"99","line":1,"column":9,"nodeType":"96","messageId":"97","endLine":1,"endColumn":14},{"ruleId":"94","severity":1,"message":"100","line":1,"column":22,"nodeType":"96","messageId":"97","endLine":1,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":2,"column":20,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"101","line":32,"column":28,"nodeType":"96","messageId":"97","endLine":32,"endColumn":44},{"ruleId":"94","severity":1,"message":"102","line":1,"column":9,"nodeType":"96","messageId":"97","endLine":1,"endColumn":15},{"ruleId":"94","severity":1,"message":"103","line":1,"column":23,"nodeType":"96","messageId":"97","endLine":1,"endColumn":30},{"ruleId":"94","severity":1,"message":"102","line":1,"column":15,"nodeType":"96","messageId":"97","endLine":1,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":27,"column":5,"nodeType":"96","endLine":27,"endColumn":14,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"99","line":1,"column":21,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"107","line":1,"column":32,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"108","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":50},{"ruleId":"94","severity":1,"message":"109","line":1,"column":52,"nodeType":"96","messageId":"97","endLine":1,"endColumn":61},{"ruleId":"94","severity":1,"message":"110","line":1,"column":79,"nodeType":"96","messageId":"97","endLine":1,"endColumn":93},{"ruleId":"94","severity":1,"message":"111","line":1,"column":95,"nodeType":"96","messageId":"97","endLine":1,"endColumn":104},{"ruleId":"94","severity":1,"message":"112","line":1,"column":106,"nodeType":"96","messageId":"97","endLine":1,"endColumn":119},{"ruleId":"104","severity":1,"message":"113","line":28,"column":5,"nodeType":"96","endLine":28,"endColumn":14,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":131,"column":13,"nodeType":"117","endLine":131,"endColumn":46},{"ruleId":"94","severity":1,"message":"99","line":1,"column":30,"nodeType":"96","messageId":"97","endLine":1,"endColumn":35},{"ruleId":"94","severity":1,"message":"118","line":52,"column":9,"nodeType":"96","messageId":"97","endLine":52,"endColumn":17},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MqttClient' is defined but never used.","'Label' is defined but never used.","'Textarea' is defined but never used.","'setDasboardState' is assigned a value but never used.","'Button' is defined but never used.","'Popover' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setConnectionStateBadge'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.settings.state] as a second argument to the useEffect Hook.",["121"],"'Text' is defined but never used.","'Autocomplete' is defined but never used.","'TextInput' is defined but never used.","'ArrowRightIcon' is defined but never used.","'CrossIcon' is defined but never used.","'SmallTickIcon' is defined but never used.","React Hook useEffect contains a call to 'setButtonAppearance'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.clientState.state] as a second argument to the useEffect Hook.",["122"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'elements' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Add dependencies array: [props.settings.state]",{"range":"127","text":"128"},"Add dependencies array: [props.clientState.state]",{"range":"129","text":"130"},[641,641],", [props.settings.state]",[1040,1040],", [props.clientState.state]"]